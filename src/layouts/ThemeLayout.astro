---
import '@/styles/globalsV0.css'
import '@/styles/theme-layout.css'
import '@/styles/custom.css'
import Navbar from '@/components/ThemeNavBar.astro'
import { ThemeWrapper } from '@/react/providers/themeProvider';

// Client-side only component for theme wrapper
const ThemeWrapperClient = (await import('@/react/providers/themeProvider')).ThemeWrapper;

interface Props {
    title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="description"
            content="Modern full-stack application with Astro and React"
        />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        <ThemeWrapperClient>
            <main class="container py-6">
                <Navbar client:load />
                <slot />
            </main>
        </ThemeWrapperClient>
        
        <!-- Load theme styles immediately to prevent flash of unstyled content -->
        <script is:inline>
            (function() {
                const theme = localStorage.getItem('ui-theme') || 'system';
                const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                const root = document.documentElement;
                
                root.classList.remove('light', 'dark');
                if (theme === 'system') {
                    root.classList.add(systemTheme);
                } else {
                    root.classList.add(theme);
                }
            })();
        </script>
    </body>
</html>
