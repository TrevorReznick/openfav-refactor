---
import { useQuery } from '@tanstack/react-query';
import { Button } from '@/react/components/ui/button';
import { ThemeToggle } from '@/react/components/ThemeToggle';

const { componentName } = Astro.props;

const components = {
  PostsComponent: () => {
    async function fetchPosts() {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      return [
        { id: 1, title: 'First Post', content: 'This is the first post content' },
        { id: 2, title: 'Second Post', content: 'This is the second post content' },
      ];
    }

    const { data: posts, isLoading, error } = useQuery({
      queryKey: ['posts'],
      queryFn: fetchPosts,
    });

    if (isLoading) return <div>Loading posts...</div>;
    if (error) return <div>Error loading posts</div>;

    return (
      <div className="p-4">
        <h2 className="text-2xl font-bold mb-4 text-foreground">Posts List</h2>
        <div className="space-y-4">
          {posts?.map(post => (
            <div key={post.id} className="p-4 bg-card rounded-lg shadow">
              <h3 className="text-xl font-semibold mb-2 text-foreground">{post.title}</h3>
              <p className="text-muted-foreground">{post.content}</p>
            </div>
          ))}
        </div>
      </div>
    );
  },

  UsersComponent: () => {
    async function fetchUsers() {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 1000));
      return [
        { id: 1, name: 'John Doe' },
        { id: 2, name: 'Jane Smith' },
      ];
    }

    const { data: users, isLoading, error } = useQuery({
      queryKey: ['users'],
      queryFn: fetchUsers,
    });

    if (isLoading) return <div>Loading users...</div>;
    if (error) return <div>Error loading users</div>;

    return (
      <div className="p-4">
        <h2 className="text-2xl font-bold mb-4 text-foreground">Users List</h2>
        <div className="space-y-4">
          {users?.map(user => (
            <div key={user.id} className="p-4 bg-card rounded-lg shadow">
              <h3 className="text-xl font-semibold mb-2 text-foreground">{user.name}</h3>
            </div>
          ))}
        </div>
      </div>
    );
  }
};

const Component = components[componentName];
---

<ThemeToggle />

{Component ? <Component /> : <div>Component not found</div>}

<style>
  :global(.text-foreground) {
    color: var(--foreground);
  }
  :global(.text-muted-foreground) {
    color: var(--muted-foreground);
  }
  :global(.bg-card) {
    background-color: var(--card);
  }
</style>
