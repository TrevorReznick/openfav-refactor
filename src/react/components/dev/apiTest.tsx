// src/components/BasicApiTest.tsx

import React from 'react';
import { sites, events, lists } from '@/api/apiClient'



//const userId = 'c9b775e4-3a69-438d-b967-e10f58a51240'
const userId = '9446217e-49e8-49f9-84dc-822ed8df969b'

const example_site = {
  title: 'this is a test site',
  url: 'https://my_example.com',
  description: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
  user_id: 'c9b775e4-3a69-438d-b967-e10f58a51240',
  accessible: true,
  domain_exists: true,
  html_content_exists: false,
  is_public: true,
  name: 'Dummy Site Name',
  secure: true,
  status_code: 200,
  type: 'website',
  valid_url: true,
  AI: false,
  id_area: 1,
  id_cat: 1,
  id_provider: 1,
  ratings: 4,
  AI_think: 'AI analysis',
  AI_summary: 'Summary generated by AI',
  context_id: '1',      // Changed to string
  resource_id: '1',     // Changed to string
  function_id: '1' ,     // Changed to string
  tags: [
    { tag_type: 3, tag_value: 5 }, // React
    { tag_type: 4, tag_value: 7 }, // JavaScript
    { tag_type: 5, tag_value: 9 }  // Frontend
  ]
};

const example_site_old = {
  title: 'Test Site',
  url: 'https://my_example.com',
  description: 'Test site created via API',
  user_id: '9446217e-49e8-49f9-84dc-822ed8df969b',
  accessible: true,
  domain_exists: true,
  html_content_exists: false,
  is_public: true,
  secure: true,
  status_code: 200,
  type: 'example_type',
  valid_url: true,
  AI: false,
  id_area: 1,
  id_cat: 1,
  tag_3: 3,
  tag_4: 4,
  tag_5: 5,
  id_provider: 1,
  ratings: 4,
  AI_think: 'AI analysis',
  AI_summary: 'Summary generated by AI',
  context_id: '1',      // Changed to string
  resource_id: '1',     // Changed to string
  function_id: '1'      // Changed to string
}

const example_new_event = {
  id_event_type: 3,
  id_event_family: 2,
  user_id: '9446217e-49e8-49f9-84dc-822ed8df969b'
}

const example_update_event = {
  id: 239,
  id_event_type: 8,
  id_event_family: 2
}

const testUserList = {
  name: "Lista preferiti",
  id_user: '9446217e-49e8-49f9-84dc-822ed8df969b', // UUID di esempio
  description: "Questa √® una lista di esempio",
  public: true,
  created_at: "2024-06-09T10:00:00Z",
  modified_at: "2024-06-09T12:00:00Z"
};

const BasicApiTest = () => {
  const handleTestClick = async () => {
    console.log('üîÑ Avvio chiamate api...')

    try {

      /*const _sites = await sites.getAll(); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _sites)
      const _sites_by_id = await sites.getOne(156); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _sites_by_id)
      const _sites_by_user = await sites.getByUserId(userId); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _sites_by_user)
      const _sites_post = await sites.create(example_site); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _sites_post)
      const _site_update = await sites.update(212, example_site); // Chiama la funzione definita in apiClient
      const _site_delete = await sites.delete(223); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _site_delete)
      const _events_logs = await events.getAll(); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _events_logs)
      const _post_event = await events.create(example_new_event) // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _events_logs)
      const _delete_event = await events.delete(251) // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _delete_event)
      const _sites_categories = await sites.joinCategories(); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _sites_categories)
      */
      const _lists = await lists.getAll(); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _lists)
      const _lists_by_userId = await lists.getListsByUserId(userId); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _lists_by_userId)
      const _list_by_id = await lists.getOne(1); // Chiama la funzione definita in apiClient
      const _post_user_list = await lists.create(testUserList); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _post_user_list)
      const _update_user_list = await lists.update(1, testUserList); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _update_user_list)
      const _delete_user_list = await lists.delete(1); // Chiama la funzione definita in apiClient
      console.log('‚úÖ Risultato della chiamata:', _delete_user_list)

    } catch (error) {
      console.error('‚ùå Errore durante la chiamata:', error)
    }
  }


  return (
    <div>
      <button
        onClick={handleTestClick}
        style={{
          padding: '10px 20px',
          backgroundColor: '#3b82f6',
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: 'pointer'
        }}
      >
        Test getSites
      </button>
    </div>
  );
};

export default BasicApiTest;