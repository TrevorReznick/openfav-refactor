{"/home/default/develop-env/prod/openfav/openfav-frontend/openfav-refactor/openfav-refactor/src/store/authStore.ts":{"path":"/home/default/develop-env/prod/openfav/openfav-frontend/openfav-refactor/openfav-refactor/src/store/authStore.ts","statementMap":{"0":{"start":{"line":3,"column":25},"end":{"line":3,"column":35}},"1":{"start":{"line":4,"column":30},"end":{"line":17,"column":1}},"2":{"start":{"line":5,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":40}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"5":{"start":{"line":11,"column":4},"end":{"line":14,"column":6}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"7":{"start":{"line":18,"column":35},"end":{"line":25,"column":1}},"8":{"start":{"line":21,"column":6},"end":{"line":23,"column":4}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":41}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"11":{"start":{"line":24,"column":15},"end":{"line":24,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":30},"end":{"line":4,"column":31}},"loc":{"start":{"line":4,"column":42},"end":{"line":17,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":35},"end":{"line":18,"column":36}},"loc":{"start":{"line":18,"column":41},"end":{"line":25,"column":1}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":38},"end":{"line":21,"column":39}},"loc":{"start":{"line":21,"column":59},"end":{"line":23,"column":3}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":10}},"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":41}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":39}},"type":"binary-expr","locations":[{"start":{"line":9,"column":18},"end":{"line":9,"column":31}},{"start":{"line":9,"column":35},"end":{"line":9,"column":39}}],"line":9},"1":{"loc":{"start":{"line":22,"column":18},"end":{"line":22,"column":39}},"type":"binary-expr","locations":[{"start":{"line":22,"column":18},"end":{"line":22,"column":31}},{"start":{"line":22,"column":35},"end":{"line":22,"column":39}}],"line":22}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0},"f":{"0":0,"1":1,"2":1,"3":0},"b":{"0":[0,0],"1":[1,0]},"inputSourceMap":{"version":3,"sources":["/home/default/develop-env/prod/openfav/openfav-frontend/openfav-refactor/openfav-refactor/src/store/authStore.ts"],"sourcesContent":["import { atom, onMount, task } from 'nanostores'\nimport { supabase } from '@/providers/supabaseAuth'\n\nexport const userStore = atom<any>(null) // Stato dell'utente (null se non autenticato)\n\nexport const initializeAuth = async () => {\n  try {\n    const {\n      data: { session },\n    } = await supabase.auth.getSession()\n    userStore.set(session?.user ?? null) // Imposta lo stato dell'utente\n  } catch (error) {\n    console.error(\n      \"Errore durante l'inizializzazione dell'autenticazione:\",\n      error\n    )\n    userStore.set(null) // Assicurati che lo stato sia nullo in caso di errore\n  }\n}\n\n// Funzione per ascoltare i cambiamenti di autenticazione\nexport const listenToAuthChanges = () => {\n  const {\n    data: { subscription },\n  } = supabase.auth.onAuthStateChange((_event, session) => {\n    userStore.set(session?.user ?? null) // Aggiorna lo stato dell'utente\n  })\n\n  return () => subscription.unsubscribe() // Pulizia del listener\n}\n"],"mappings":"AAAA,SAAS,MAAM,SAAS,YAAY;AACpC,SAAS,gBAAgB;AAElB,aAAM,YAAY,KAAU,IAAI;AAEhC,aAAM,iBAAiB,YAAY;AACxC,MAAI;AACF,UAAM;AAAA,MACJ,MAAM,EAAE,QAAQ;AAAA,IAClB,IAAI,MAAM,SAAS,KAAK,WAAW;AACnC,cAAU,IAAI,SAAS,QAAQ,IAAI;AAAA,EACrC,SAAS,OAAO;AACd,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AACA,cAAU,IAAI,IAAI;AAAA,EACpB;AACF;AAGO,aAAM,sBAAsB,MAAM;AACvC,QAAM;AAAA,IACJ,MAAM,EAAE,aAAa;AAAA,EACvB,IAAI,SAAS,KAAK,kBAAkB,CAAC,QAAQ,YAAY;AACvD,cAAU,IAAI,SAAS,QAAQ,IAAI;AAAA,EACrC,CAAC;AAED,SAAO,MAAM,aAAa,YAAY;AACxC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8ea95f2be8bd2b13544a1745a3cea377c0768e44"}}